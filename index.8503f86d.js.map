{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar thead = table.querySelector(\"thead\");\nvar tbody = table.querySelector(\"tbody\");\nvar currentSortColumn = -1;\nvar selectedRow = null;\nfunction sortTableByIndex(index, reversed) {\n    var _tbody;\n    var sorted = Array.from(tbody.children).sort(function(child1, child2) {\n        var value1 = child1.children[index].textContent;\n        var value2 = child2.children[index].textContent;\n        if (!isNaN(normalizedParseInt(value1))) return normalizedParseInt(value1) - normalizedParseInt(value2);\n        return child1.children[index].textContent.localeCompare(child2.children[index].textContent);\n    });\n    if (reversed) sorted.reverse();\n    (_tbody = tbody).replaceChildren.apply(_tbody, _to_consumable_array(sorted));\n}\nthead.addEventListener(\"click\", function(e) {\n    var columnIndex = Array.from(thead.firstElementChild.children).indexOf(e.target);\n    sortTableByIndex(columnIndex, columnIndex === currentSortColumn);\n    currentSortColumn = columnIndex === currentSortColumn ? -1 : columnIndex;\n});\ntbody.addEventListener(\"click\", function(e) {\n    var tableRow = e.target.closest(\"tr\");\n    if (!tableRow) return;\n    if (selectedRow) {\n        selectedRow.classList.remove(\"active\");\n        if (tableRow === selectedRow) {\n            selectedRow = null;\n            return;\n        }\n        selectedRow = null;\n    }\n    tableRow.classList.add(\"active\");\n    selectedRow = tableRow;\n});\ntbody.addEventListener(\"dblclick\", function(e) {\n    var originalContent = e.target.textContent;\n    var input = document.createElement(\"input\");\n    input.classList.add(\"cell-input\");\n    input.style.width = getComputedStyle(e.target).width;\n    input.value = originalContent;\n    var closeInput = function() {\n        if (input.value === \"\") {\n            e.target.textContent = originalContent;\n            return;\n        }\n        e.target.textContent = input.value;\n        input.remove();\n    };\n    input.addEventListener(\"blur\", closeInput);\n    input.addEventListener(\"keypress\", function(keyEvent) {\n        if (keyEvent.key === \"Enter\") closeInput();\n    });\n    e.target.replaceChildren(input);\n    input.focus();\n});\nfunction normalizedParseInt(value) {\n    return parseInt(value.replaceAll(\"$\", \"\").replaceAll(\",\", \"\"));\n}\nfunction capitalize(string) {\n    return string.slice(0, 1).toUpperCase() + string.slice(1).toLowerCase();\n}\nfunction convertToSalary(salary) {\n    return \"$\".concat(salary.toLocaleString(\"en-US\"));\n}\nfunction addEmployee(employee) {\n    var values = Object.values(employee);\n    var tr = document.createElement(\"tr\");\n    for(var i = 0; i < values.length; i++){\n        var td = document.createElement(\"td\");\n        td.textContent = values[i];\n        tr.append(td);\n    }\n    tbody.append(tr);\n}\nfunction pushNotification(posTop, posRight, title, description, type) {\n    var notification = document.createElement(\"div\");\n    var titleElement = document.createElement(\"h2\");\n    var descriptionElement = document.createElement(\"p\");\n    notification.classList.add(\"notification\");\n    notification.classList.add(type);\n    titleElement.classList.add(\"title\");\n    titleElement.textContent = title;\n    descriptionElement.textContent = description;\n    notification.append(titleElement, descriptionElement);\n    notification.style.top = \"\".concat(posTop, \"px\");\n    notification.style.right = \"\".concat(posRight, \"px\");\n    notification.dataset.qa = \"notification\";\n    document.body.append(notification);\n    setTimeout(function() {\n        notification.style.visibility = \"hidden\";\n    }, 2000);\n}\nfunction handleSubmit(e) {\n    e.preventDefault();\n    var employeeName = e.target.name.value;\n    var employeePosition = e.target.position.value;\n    var employeeOffice = e.target.office.value;\n    var employeeAge = parseInt(e.target.age.value);\n    var employeeSalary = parseInt(e.target.salary.value);\n    if (employeeName.trim().length === 0 || employeePosition.trim().length === 0) {\n        pushNotification(10, 10, \"Error!\", \"Some of values contains only spaces.\", \"error\");\n        return;\n    }\n    if (employeePosition.length === 0) {\n        pushNotification(10, 10, \"Error!\", \"You need to enter employee position.\", \"error\");\n        return;\n    }\n    if (employeeName.length < 4) {\n        pushNotification(10, 10, \"Error!\", \"Your employee name length is less than 4.\", \"error\");\n        return;\n    }\n    if (employeeAge < 18) {\n        pushNotification(10, 10, \"Error!\", \"Your employee has to be older than 18.\", \"error\");\n        return;\n    }\n    if (employeeAge > 90) {\n        pushNotification(10, 10, \"Error!\", \"Your employee has to be younger than 90.\", \"error\");\n        return;\n    }\n    addEmployee({\n        name: employeeName,\n        position: employeePosition,\n        office: employeeOffice,\n        age: employeeAge,\n        salary: convertToSalary(employeeSalary)\n    });\n    pushNotification(10, 10, \"Added new employee\", \"Your new employee was added to the table!\", \"success\");\n    e.target.reset();\n}\nfunction addForm() {\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    var inputsToCreate = [\n        {\n            name: \"name\",\n            type: \"text\"\n        },\n        {\n            name: \"position\",\n            type: \"text\"\n        },\n        {\n            name: \"office\",\n            type: \"select\",\n            options: [\n                \"Tokyo\",\n                \"Singapore\",\n                \"London\",\n                \"New York\",\n                \"Edinburgh\",\n                \"San Francisco\"\n            ]\n        },\n        {\n            name: \"age\",\n            type: \"number\"\n        },\n        {\n            name: \"salary\",\n            type: \"number\"\n        }\n    ];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = inputsToCreate[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var inputToCreate = _step.value;\n            var label = document.createElement(\"label\");\n            label.textContent = \"\".concat(capitalize(inputToCreate.name), \": \");\n            if (inputToCreate.type === \"select\") {\n                var select = document.createElement(\"select\");\n                select.name = inputToCreate.name;\n                select.dataset.qa = inputToCreate.name;\n                select.required = true;\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    for(var _iterator1 = inputToCreate.options[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var optionValue = _step1.value;\n                        var option = document.createElement(\"option\");\n                        option.value = optionValue;\n                        option.textContent = optionValue;\n                        select.append(option);\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                            _iterator1.return();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n                label.append(select);\n            } else {\n                var input = document.createElement(\"input\");\n                input.name = inputToCreate.name;\n                input.dataset.qa = inputToCreate.name;\n                input.type = inputToCreate.type;\n                input.required = true;\n                label.append(input);\n            }\n            form.append(label);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var button = document.createElement(\"button\");\n    button.textContent = \"Save to table\";\n    form.append(button);\n    document.body.append(form);\n    form.addEventListener(\"submit\", handleSubmit);\n}\naddForm();\n\n//# sourceMappingURL=index.8503f86d.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst thead = table.querySelector('thead');\nconst tbody = table.querySelector('tbody');\n\nlet currentSortColumn = -1;\nlet selectedRow = null;\n\nfunction sortTableByIndex(index, reversed) {\n  const sorted = Array.from(tbody.children).sort((child1, child2) => {\n    const value1 = child1.children[index].textContent;\n    const value2 = child2.children[index].textContent;\n\n    if (!isNaN(normalizedParseInt(value1))) {\n      return normalizedParseInt(value1) - normalizedParseInt(value2);\n    }\n\n    return child1.children[index].textContent.localeCompare(\n      child2.children[index].textContent,\n    );\n  });\n\n  if (reversed) {\n    sorted.reverse();\n  }\n\n  tbody.replaceChildren(...sorted);\n}\n\nthead.addEventListener('click', (e) => {\n  const columnIndex = Array.from(thead.firstElementChild.children).indexOf(\n    e.target,\n  );\n\n  sortTableByIndex(columnIndex, columnIndex === currentSortColumn);\n\n  currentSortColumn = columnIndex === currentSortColumn ? -1 : columnIndex;\n});\n\ntbody.addEventListener('click', (e) => {\n  const tableRow = e.target.closest('tr');\n\n  if (!tableRow) {\n    return;\n  }\n\n  if (selectedRow) {\n    selectedRow.classList.remove('active');\n\n    if (tableRow === selectedRow) {\n      selectedRow = null;\n\n      return;\n    }\n\n    selectedRow = null;\n  }\n\n  tableRow.classList.add('active');\n\n  selectedRow = tableRow;\n});\n\ntbody.addEventListener('dblclick', (e) => {\n  const originalContent = e.target.textContent;\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n  input.style.width = getComputedStyle(e.target).width;\n  input.value = originalContent;\n\n  const closeInput = () => {\n    if (input.value === '') {\n      e.target.textContent = originalContent;\n\n      return;\n    }\n\n    e.target.textContent = input.value;\n\n    input.remove();\n  };\n\n  input.addEventListener('blur', closeInput);\n\n  input.addEventListener('keypress', (keyEvent) => {\n    if (keyEvent.key === 'Enter') {\n      closeInput();\n    }\n  });\n\n  e.target.replaceChildren(input);\n  input.focus();\n});\n\nfunction normalizedParseInt(value) {\n  return parseInt(value.replaceAll('$', '').replaceAll(',', ''));\n}\n\nfunction capitalize(string) {\n  return string.slice(0, 1).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nfunction convertToSalary(salary) {\n  return `$${salary.toLocaleString('en-US')}`;\n}\n\nfunction addEmployee(employee) {\n  const values = Object.values(employee);\n\n  const tr = document.createElement('tr');\n\n  for (let i = 0; i < values.length; i++) {\n    const td = document.createElement('td');\n\n    td.textContent = values[i];\n\n    tr.append(td);\n  }\n\n  tbody.append(tr);\n}\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const notification = document.createElement('div');\n  const titleElement = document.createElement('h2');\n  const descriptionElement = document.createElement('p');\n\n  notification.classList.add(`notification`);\n  notification.classList.add(type);\n  titleElement.classList.add('title');\n\n  titleElement.textContent = title;\n  descriptionElement.textContent = description;\n\n  notification.append(titleElement, descriptionElement);\n\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n\n  notification.dataset.qa = 'notification';\n\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.style.visibility = 'hidden';\n  }, 2000);\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const employeeName = e.target.name.value;\n  const employeePosition = e.target.position.value;\n  const employeeOffice = e.target.office.value;\n  const employeeAge = parseInt(e.target.age.value);\n  const employeeSalary = parseInt(e.target.salary.value);\n\n  if (\n    employeeName.trim().length === 0 ||\n    employeePosition.trim().length === 0\n  ) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Some of values contains only spaces.',\n      'error',\n    );\n\n    return;\n  }\n\n  if (employeePosition.length === 0) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'You need to enter employee position.',\n      'error',\n    );\n\n    return;\n  }\n\n  if (employeeName.length < 4) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Your employee name length is less than 4.',\n      'error',\n    );\n\n    return;\n  }\n\n  if (employeeAge < 18) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Your employee has to be older than 18.',\n      'error',\n    );\n\n    return;\n  }\n\n  if (employeeAge > 90) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Your employee has to be younger than 90.',\n      'error',\n    );\n\n    return;\n  }\n\n  addEmployee({\n    name: employeeName,\n    position: employeePosition,\n    office: employeeOffice,\n    age: employeeAge,\n    salary: convertToSalary(employeeSalary),\n  });\n\n  pushNotification(\n    10,\n    10,\n    'Added new employee',\n    'Your new employee was added to the table!',\n    'success',\n  );\n\n  e.target.reset();\n}\n\nfunction addForm() {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  const inputsToCreate = [\n    {\n      name: 'name',\n      type: 'text',\n    },\n    {\n      name: 'position',\n      type: 'text',\n    },\n    {\n      name: 'office',\n      type: 'select',\n      options: [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ],\n    },\n    {\n      name: 'age',\n      type: 'number',\n    },\n    {\n      name: 'salary',\n      type: 'number',\n    },\n  ];\n\n  for (const inputToCreate of inputsToCreate) {\n    const label = document.createElement('label');\n\n    label.textContent = `${capitalize(inputToCreate.name)}: `;\n\n    if (inputToCreate.type === 'select') {\n      const select = document.createElement('select');\n\n      select.name = inputToCreate.name;\n      select.dataset.qa = inputToCreate.name;\n      select.required = true;\n\n      for (const optionValue of inputToCreate.options) {\n        const option = document.createElement('option');\n\n        option.value = optionValue;\n        option.textContent = optionValue;\n\n        select.append(option);\n      }\n\n      label.append(select);\n    } else {\n      const input = document.createElement('input');\n\n      input.name = inputToCreate.name;\n      input.dataset.qa = inputToCreate.name;\n      input.type = inputToCreate.type;\n      input.required = true;\n\n      label.append(input);\n    }\n\n    form.append(label);\n  }\n\n  const button = document.createElement('button');\n\n  button.textContent = 'Save to table';\n\n  form.append(button);\n\n  document.body.append(form);\n\n  form.addEventListener('submit', handleSubmit);\n}\n\naddForm();\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","thead","tbody","currentSortColumn","selectedRow","normalizedParseInt","value","parseInt","replaceAll","pushNotification","posTop","posRight","title","description","type","notification","createElement","titleElement","descriptionElement","classList","add","textContent","append","style","top","concat","right","dataset","qa","body","setTimeout","visibility","handleSubmit","e","preventDefault","employeeName","target","name","employeePosition","position","employeeOffice","office","employeeAge","age","employeeSalary","salary","trim","addEmployee","employee","values","Object","tr","td","toLocaleString","reset","addEventListener","reversed","sorted","columnIndex","from","firstElementChild","children","indexOf","sort","child1","child2","value1","value2","isNaN","localeCompare","reverse","replaceChildren","apply","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","prototype","toString","call","slice","constructor","test","_non_iterable_spread","TypeError","tableRow","closest","remove","originalContent","input","width","getComputedStyle","closeInput","keyEvent","key","focus","addForm","form","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","inputsToCreate","options","next","done","inputToCreate","label","string","toUpperCase","toLowerCase","select","required","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","optionValue","option","err","return","button"],"version":3,"file":"index.8503f86d.js.map"}